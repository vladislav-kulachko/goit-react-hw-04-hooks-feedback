{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Buttons/Buttons.module.css","components/Section/Section.module.css","components/Buttons/Buttons.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","handleIncrement","state","useState","top","setTop","left","setleft","width","setWidth","height","setHeight","arrRefs","keys","Array","from","className","s","container","map","key","i","id","ref","node","push","type","button","onMouseDown","e","maxSize","Math","max","clientWidth","clientHeight","coords","getBoundingClientRect","clientX","round","clientY","calcPosBlink","blink","style","Statistics","children","values","find","value","title","list","item","slice","toUpperCase","reduce","a","total","countPositiveFeedbackPercentage","Section","section","Notify","message","App","Map","setState","currentGood","setCurrentGood","currentNeutral","setCurrentNeutral","currentBad","setCurrentBad","currentKey","set","Error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.467ba35f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__2Ci_0\",\"list\":\"Statistics_list__1REAx\",\"item\":\"Statistics_item__Csy5v\",\"value\":\"Statistics_value__U7Dbz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buttons_container__32ppj\",\"button\":\"Buttons_button__2RuPm\",\"blink\":\"Buttons_blink__2hWZe\",\"puls\":\"Buttons_puls__Kc8RJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2y9DA\",\"title\":\"Section_title__2-v9d\"};","import { useState } from \"react\";\r\nimport s from \"./Buttons.module.css\";\r\n\r\nexport default function FeedbackOptions({ handleIncrement, state }) {\r\n  const [top, setTop] = useState(\"0px\");\r\n  const [left, setleft] = useState(\"0px\");\r\n  const [width, setWidth] = useState(\"0px\");\r\n  const [height, setHeight] = useState(\"0px\");\r\n\r\n  const arrRefs = [];\r\n\r\n  const calcPosBlink = (e, i, key) => {\r\n    let maxSize = Math.max(arrRefs[i].clientWidth, arrRefs[i].clientHeight);\r\n    let coords = arrRefs[i].getBoundingClientRect();\r\n    let left = e.clientX - Math.round(coords.left) - maxSize / 2 + \"px\";\r\n    let top = e.clientY - Math.round(coords.top) - maxSize / 2 + \"px\";\r\n\r\n    setTop(top);\r\n    setleft(left);\r\n    setWidth(maxSize + \"px\");\r\n    setHeight(maxSize + \"px\");\r\n\r\n    handleIncrement(key);\r\n  };\r\n\r\n  let keys = Array.from(state.keys());\r\n  return (\r\n    <div className={s.container}>\r\n      {keys.map((key, i) => {\r\n        return (\r\n          <button\r\n            id={key}\r\n            ref={(node) => arrRefs.push(node)}\r\n            key={key}\r\n            type=\"button\"\r\n            className={s.button}\r\n            onMouseDown={(e) => calcPosBlink(e, i, key)}\r\n          >\r\n            {key}\r\n            <div\r\n              className={s.blink}\r\n              style={{ top: top, left: left, width: width, height: height }}\r\n            ></div>\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import s from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({ state, children }) {\r\n  const values = Array.from(state.values());\r\n  const keys = Array.from(state.keys());\r\n\r\n  const countTotalFeedback = () => {\r\n    const total = values.reduce((a, i) => a + i);\r\n    return total;\r\n  };\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const total = values.reduce((a, i) => a + i);\r\n    const posPercent = Math.round((values[0] / total) * 100);\r\n    return posPercent;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {values.find((value) => value > 0) ? (\r\n        <div className={s.container}>\r\n          <h2 className={s.title}>Statistics:</h2>\r\n          <ul className={s.list}>\r\n            {keys.map((key, i) => (\r\n              <li key={key} className={s.item}>\r\n                {key.slice(0, 1).toUpperCase() + key.slice(1)}:{\" \"}\r\n                <span className={s.value}>{values[i]}</span>\r\n              </li>\r\n            ))}\r\n            <li className={s.item}>\r\n              Total: <span className={s.value}>{countTotalFeedback()}</span>\r\n            </li>\r\n            <li className={s.item}>\r\n              Positive feedback:{\" \"}\r\n              <span className={s.value}>\r\n                {countPositiveFeedbackPercentage()}%\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <>{children}</>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import s from \"./Section.module.css\";\r\n\r\nexport default function Section({ children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h1 className={s.title}>Please, leave feedback!</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","export default function Notify({message}) {\r\n  return <p>{message}</p>;\r\n}\r\n","import {useState} from 'react';\r\n\r\nimport './App.css';\r\nimport FeedbackOptions from './components/Buttons/Buttons';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Section from './components/Section/Section';\r\nimport Notify from './components/Notification/Notification';\r\n\r\nexport default function App() {\r\n  const [state, setState] = useState(\r\n    new Map([\r\n      ['good', 0],\r\n      ['neutral', 0],\r\n      ['bad', 0],\r\n    ]),\r\n  );\r\n\r\n  const [currentGood, setCurrentGood] = useState(1);\r\n  const [currentNeutral, setCurrentNeutral] = useState(1);\r\n  const [currentBad, setCurrentBad] = useState(1);\r\n\r\n  const handleIncrement = currentKey => {\r\n    switch (currentKey) {\r\n      case 'good':\r\n        setCurrentGood(s => s + 1);\r\n        setState(state.set(currentKey, currentGood));\r\n        break;\r\n      case 'neutral':\r\n        setCurrentNeutral(s => s + 1);\r\n        setState(state.set(currentKey, currentNeutral));\r\n        break;\r\n      case 'bad':\r\n        setCurrentBad(s => s + 1);\r\n        setState(state.set(currentKey, currentBad));\r\n        break;\r\n      default:\r\n        throw new Error();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <FeedbackOptions\r\n        state={state}\r\n        handleIncrement={handleIncrement}\r\n      ></FeedbackOptions>\r\n      <Statistics state={state}>\r\n        <Notify message={'O my God, urgently click!'}></Notify>\r\n      </Statistics>\r\n    </Section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}